buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


def gitCommitCount = Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "moe.shizuku.fcmformojo"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode gitCommitCount
        versionName "0.3.7.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "en", "zh-rCN", "ja"

        resValue "string", "version_name", "${versionName} (${versionCode})"
        buildConfigField "String", "DONATE_ALIPAY_URL", '"alipayqr://platformapi/startapp?saId=10000007&qrcode=https%3A%2F%2Fqr.alipay.com%2Faex01083scje5axcttivf13"'
        buildConfigField "String", "REQUIRE_SERVER_VERSION", '"0.3.7"'
    }
    signingConfigs {
        sign
        sign {
            keyAlias 'MilkiceAndroidSigningKey'
            keyPassword '=-}miLko0yiCe'
            storeFile file('/home/milkice/keys/Android/milkice.jks')
            storePassword '36925801'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.sign
            ext {
                alwaysUpdateBuildId = false
                enableCrashlytics = false
            }
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.sign
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "ffm-${variant.versionCode}.apk"
        }
    }
}

configurations {
    compile.exclude group: 'com.android.support', module: 'support-v4'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:support-compat:26.0.2'
    implementation 'com.android.support:support-core-utils:26.0.2'
    implementation 'com.android.support:support-core-ui:26.0.2'
    implementation 'com.android.support:support-fragment:26.0.2'
    implementation 'com.android.support:recyclerview-v7:26.0.2'
    implementation 'com.android.support:cardview-v7:26.0.2'
    implementation 'moe.shizuku.preference:preference:2.0.5'
    implementation 'moe.shizuku.preference:preference-dialog-android:2.0.5'
    implementation 'moe.shizuku.preference:preference-simplemenu:2.0.5'
    implementation 'moe.shizuku.support:support-utils:2.0'
    implementation 'moe.shizuku.support:recyclerview-utils:2.0'
    implementation 'moe.shizuku.support:privileged-api:23'
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.google.firebase:firebase-messaging:11.2.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
}

def ksFile = rootProject.file('signing.properties')
def props = new Properties()
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))

    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'keystore.properties\' not found!'
    }
} else {
    println '\'keystore.properties\' not found!'
}

apply plugin: 'com.google.gms.google-services'